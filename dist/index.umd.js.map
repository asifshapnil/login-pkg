{"version":3,"file":"index.umd.js","sources":["../src/package/form/form-builder/form-builder.component.tsx","../src/package/login/login.component.tsx","../src/module/signin.tsx","../src/module/profile.tsx","../src/index.tsx","../src/App.tsx"],"sourcesContent":["import { ErrorMessage, Formik } from \"formik\";\r\nimport { FC, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./form-builder.scss\";\r\nimport { faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport interface Control {\r\n  name: string;\r\n  label: string;\r\n  placeholder?: string;\r\n  type:\r\n    | string\r\n    | \"text\"\r\n    | \"textarea\"\r\n    | \"number\"\r\n    | \"checkbox\"\r\n    | \"switch\"\r\n    | \"date\"\r\n    | \"datetime\"\r\n    | \"email\"\r\n    | \"select\"\r\n    | \"password\"\r\n    | \"chips\"\r\n    | \"file\";\r\n  required?: boolean;\r\n  readOnly?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport interface FormConfig {\r\n  controls: Control[];\r\n}\r\n\r\ninterface FormBuilderComponentProps {\r\n  formRef?: any;\r\n  formConfig: FormConfig;\r\n  initialValues: any;\r\n  validation: any;\r\n  renderCount?: any;\r\n  fileConfig?: {\r\n    fileName?: string;\r\n    isShowImage: boolean;\r\n    isEdit: boolean;\r\n    preview: any;\r\n    isLink?: boolean;\r\n    onRemoveFile: () => void;\r\n  };\r\n}\r\n\r\nconst FormBuilderComponent: FC<FormBuilderComponentProps> = ({\r\n  formRef,\r\n  formConfig,\r\n  initialValues,\r\n  validation,\r\n  fileConfig,\r\n  renderCount,\r\n}) => {\r\n\r\n  const { controls } = formConfig;\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  \r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {Object.keys(initialValues).length ? (\r\n        <Formik\r\n          key={renderCount || 0}\r\n          innerRef={formRef}\r\n          enableReinitialize\r\n          onSubmit={(values: any) => {}}\r\n          validationSchema={validation}\r\n          initialValues={initialValues}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            setFieldValue,\r\n            values,\r\n            touched,\r\n            errors,\r\n          }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <div className=\"\">\r\n                {controls && controls.length\r\n                  ? controls.map((control, i) => (\r\n                      <div key={i}>\r\n                        {(() => {\r\n                          switch (control.type) {\r\n                            case \"text\":\r\n                              return (\r\n                                <div\r\n                                  className=\"d-flex flex-column justify-content-start align-items-start mt-3 mb-3\"\r\n                                >\r\n                                  <div className=\"mb-2\">\r\n                                    {control.label}\r\n                                    {control.required && (\r\n                                      <span className=\"text-danger\">*</span>\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"w-100\">\r\n                                    <Form.Group>\r\n                                      <div className=\"d-flex align-items-center\">\r\n                                        <Form.Control\r\n                                          type=\"text\"\r\n                                          placeholder={control.placeholder}\r\n                                          name={control.name}\r\n                                          onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldValue(\r\n                                              control?.name,\r\n                                              e.target.value\r\n                                            );\r\n                                          }}\r\n                                          value={values[control?.name]}\r\n                                          required={control.required ?? false}\r\n                                          isValid={\r\n                                            touched[control.name] &&\r\n                                            !errors[control.name]\r\n                                          }\r\n                                          isInvalid={\r\n                                            (!!touched[control.name] &&\r\n                                              !!errors[control.name]) ??\r\n                                            false\r\n                                          }\r\n                                        />\r\n                                        \r\n                                      </div>\r\n                                      <ErrorMessage\r\n                                        name={control.name}\r\n                                        component=\"div\"\r\n                                        className=\"error-message\"\r\n                                      />\r\n                                    </Form.Group>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            case \"email\":\r\n                              return (\r\n                                <div\r\n                                  className=\"d-flex flex-column justify-content-start align-items-start mt-3 mb-3\"\r\n                                >\r\n                                  <div className=\"mb-2\">\r\n                                    {control.label}\r\n                                    {control.required && (\r\n                                      <span className=\"text-danger\">*</span>\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"w-100\">\r\n                                    <Form.Group>\r\n                                      <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder={control.placeholder}\r\n                                        name={control.name}\r\n                                        onChange={(e: any) => {\r\n                                          handleChange(e);\r\n                                          setFieldValue(\r\n                                            control?.name,\r\n                                            e.target.value\r\n                                          );\r\n                                        }}\r\n                                        value={values[control?.name]}\r\n                                        required={control.required ?? false}\r\n                                        disabled={control.disabled ?? false}\r\n                                        isValid={\r\n                                          touched[control.name] &&\r\n                                          !errors[control.name]\r\n                                        }\r\n                                        isInvalid={\r\n                                          (!!touched[control.name] &&\r\n                                            !!errors[control.name]) ??\r\n                                          false\r\n                                        }\r\n                                      />\r\n                                      <ErrorMessage\r\n                                        name={control.name}\r\n                                        component=\"div\"\r\n                                        className=\"error-message\"\r\n                                      />\r\n                                    </Form.Group>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            case \"password\":\r\n                              return (\r\n                                <div\r\n                                  className={\"d-flex flex-column justify-content-start align-items-start mt-3 mb-3\"}\r\n                                >\r\n                                  <div className=\"mb-2\">\r\n                                    {control.label}\r\n                                    {control.required && (\r\n                                      <span className=\"text-danger\">*</span>\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"w-100\">\r\n                                    <Form.Group>\r\n                                      <div className=\"d-flex align-items-center gap-2 position-relative \">\r\n                                        <Form.Control\r\n                                          type={\r\n                                            showPassword ? \"text\" : \"password\"\r\n                                          }\r\n                                          placeholder={control.placeholder}\r\n                                          name={control.name}\r\n                                          onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldValue(\r\n                                              control?.name,\r\n                                              e.target.value\r\n                                            );\r\n                                          }}\r\n                                          value={values[control?.name]}\r\n                                          required={control.required ?? false}\r\n                                          readOnly={control.readOnly ?? false}\r\n                                          disabled={control.disabled ?? false}\r\n                                          isValid={\r\n                                            touched[control.name] &&\r\n                                            !errors[control.name]\r\n                                          }\r\n                                          isInvalid={\r\n                                            (!!touched[control.name] &&\r\n                                              !!errors[control.name]) ??\r\n                                            false\r\n                                          }\r\n                                        />\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          onClick={togglePasswordVisibility}\r\n                                          className=\"password-toggle-button border-0 position-absolute end-0 me-2\"\r\n                                        >\r\n                                          {showPassword ? (\r\n                                            <FontAwesomeIcon\r\n                                              icon={faEyeSlash}\r\n                                            />\r\n                                          ) : (\r\n                                            <FontAwesomeIcon icon={faEye} />\r\n                                          )}\r\n                                        </button>\r\n                                      </div>\r\n\r\n                                      <ErrorMessage\r\n                                        name={control.name}\r\n                                        component=\"div\"\r\n                                        className=\"error-message\"\r\n                                      />\r\n                                    </Form.Group>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            default:\r\n                              return null;\r\n                          }\r\n                        })()}\r\n                      </div>\r\n                    ))\r\n                  : \"\"}\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBuilderComponent;\r\n","import { Button } from \"react-bootstrap\";\r\nimport FormBuilderComponent, { FormConfig } from \"../form/form-builder/form-builder.component\";\r\nimport * as yup from \"yup\";\r\nimport './login.scss';\r\nimport { FC } from \"react\";\r\n\r\ninterface LoginProps {\r\n    formRef: any;\r\n    initialValues: any;\r\n    formConfig: FormConfig;\r\n    validationSchema: any;\r\n    loginAction: any;\r\n}\r\n\r\n\r\nconst Login: FC<LoginProps> = ({\r\n    formRef,\r\n    initialValues,\r\n    formConfig,\r\n    validationSchema,\r\n    loginAction\r\n}) => {\r\n    return (\r\n        <>\r\n            <div className=\"login-container\" style={{\r\n                height: '100vh'\r\n            }}>\r\n                <div className=\"login-page-backsplash\" style={\r\n                    {\r\n                        width: '100vw',\r\n                        height: '60vh',\r\n                        background: 'linear-gradient(to right, #ebebeb, #9e9e9e)',\r\n                        borderBottomLeftRadius: '55% 71%',\r\n                        borderBottomRightRadius: '54% 71%',\r\n                        overflow: 'hidden'\r\n                      }\r\n                }></div>\r\n                <div className=\"login-card-wrapper p-2\" style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center'\r\n                }}>\r\n                    <div className=\"bg-light shadow-lg\" style={{\r\n                        borderRadius: '5px',\r\n                        width: '30rem',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        marginTop: '-10rem',\r\n                        padding: '1rem'\r\n                    }}>\r\n                        <div>\r\n                            <div style={{\r\n                                fontSize: '18px',\r\n                                fontWeight: '700'\r\n                            }}>\r\n                                Login to test system\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <FormBuilderComponent\r\n                                formRef={formRef}\r\n                                initialValues={initialValues}\r\n                                validation={validationSchema}\r\n                                formConfig={formConfig}\r\n                            />\r\n                        </div>\r\n\r\n                        <Button\r\n                            variant={loginAction.variant}\r\n                            className=\"btn mt-5\"\r\n                            onClick={loginAction.event}\r\n                        >\r\n                            {loginAction.label}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import { createRef, useState } from \"react\";\r\nimport { FormConfig, Login } from \"../package\";\r\nimport * as yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SignIn = () => {\r\n    console.log(111111111);\r\n    \r\n    const formRef = createRef();\r\n    const navigate = useNavigate();\r\n\r\n    const [initialValues, setInitialValues] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const formConfig: FormConfig = {\r\n        controls: [\r\n            {\r\n                name: \"email\",\r\n                label: \"Email\",\r\n                placeholder: \"example@domain.com\",\r\n                type: \"text\",\r\n            },\r\n            {\r\n                name: \"password\",\r\n                label: \"password\",\r\n                placeholder: \"******\",\r\n                type: \"password\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    const validationSchema = yup.object().shape({\r\n        email: yup\r\n            .string()\r\n            .email(\"Please enter a valid email address\")\r\n            .required(\"Email is required\"),\r\n        password: yup\r\n            .string()\r\n            .required(\"Password is required\"),\r\n    })\r\n\r\n    const onSubmit = () => {\r\n        const form: any = formRef.current;\r\n\r\n        if (form) {\r\n            form.handleSubmit();\r\n            console.log(form.values);\r\n            const { email, password } = form.values;\r\n            if (!email || !password) return;\r\n            navigate(`profile?email=${email}`)\r\n        }\r\n    }\r\n\r\n    const loginAction = {\r\n        variant: \"primary\",\r\n        label: \"Signin\",\r\n        event: onSubmit\r\n    }\r\n    return (\r\n        <Login\r\n            formRef={formRef}\r\n            initialValues={initialValues}\r\n            formConfig={formConfig}\r\n            validationSchema={validationSchema}\r\n            loginAction={loginAction}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SignIn;","import { useLocation } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n    const location = useLocation();\r\n\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const email = queryParams.get('email');\r\n\r\n    return (\r\n        <>{email ?? 'Not found'}</>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nexport * from '../src/package';\n","import './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport SignIn from './module/signin';\nimport Profile from './module/profile';\nimport { Login } from './package';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"\" element={<SignIn />} />\n        <Route path=\"/profile\" element={<Profile />} />\n      </Routes>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n"],"names":["FormBuilderComponent","formRef","formConfig","initialValues","validation","renderCount","controls","showPassword","setShowPassword","useState","togglePasswordVisibility","prevState","_jsx","jsx","children","Object","keys","length","Formik","innerRef","enableReinitialize","onSubmit","values","validationSchema","handleSubmit","handleChange","setFieldValue","touched","errors","Form","noValidate","className","map","control","i","type","_jsxs","jsxs","label","required","Group","Control","placeholder","name","onChange","e","target","value","isValid","isInvalid","ErrorMessage","component","disabled","readOnly","onClick","FontAwesomeIcon","icon","faEyeSlash","faEye","Login","loginAction","style","height","width","background","borderBottomLeftRadius","borderBottomRightRadius","overflow","display","justifyContent","alignItems","borderRadius","flexDirection","marginTop","padding","fontSize","fontWeight","Button","variant","event","SignIn","console","log","createRef","navigate","useNavigate","setInitialValues","email","password","yup","object","shape","string","form","current","Profile","location","useLocation","URLSearchParams","search","get","_Fragment","ReactDOM","createRoot","document","getElementById","render","BrowserRouter","Routes","Route","path","element"],"mappings":"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"}